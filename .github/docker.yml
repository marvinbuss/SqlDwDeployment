name: Docker - Test and Build

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - 'v*.*.*'

  # Run tests for any PRs.
  pull_request:
    branches:
      - main
    paths:
      - "twainnlp/**"
      - "Dockerfile"
      - "requirements.txt"
      - ".github/workflows/docker.yml"

env:
  DEFAULT_BRANCH: "main"
  IMAGE_NAME: "twainnlpenglish"
  CONTAINER_REGISTRY_URI: "twainglobalacr.azurecr.io"

jobs:
  test:
    name: Docker
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      # Checkout repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      # Setup Docker buildx
      - name: Setup Docker buildx
        id: docker_buildx
        uses: docker/setup-buildx-action@v2

      # Setup QUEMU
      - name: Set up QEMU
        id: docker_quemu
        uses: docker/setup-qemu-action@v2

      # Log in to container registry
      - name: Log into container registry
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY_URI }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: docker_metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTAINER_REGISTRY_URI }}/${{ env.IMAGE_NAME }}
          tag-sha: false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true # ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
